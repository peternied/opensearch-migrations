name: Local SonarQube Analysis

on:
  push:
  pull_request:

jobs:
  sonar:
    name: Run Local SonarQube Analysis
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -s -u admin:admin http://localhost:9000/api/system/health | grep -o GREEN"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=60
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: |
            11
    - name: Cache SonarQube Scanner
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: sonar-cache
        restore-keys: sonar-cache
    - uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: 8.0.2
        gradle-home-cache-cleanup: true
    - name: Run Gradle Build
      run: ./gradlew copyDependencies
    - name: Run SonarQube Scanner
      env:
        SONAR_HOST_URL: http://localhost:9000
        SONAR_LOGIN: admin
        SONAR_PASSWORD: admin
      run: |
        curl -sLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux-x64.zip
        unzip -q sonar-scanner-cli.zip -d $HOME
        export PATH="$HOME/sonar-scanner-6.2.1.4610-linux-x64/bin:$PATH"
        sonar-scanner \
          -Dsonar.projectKey=local_project \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_LOGIN \
          -Dsonar.password=$SONAR_PASSWORD

    - name: Save the reports
      run: |
        mkdir -p sonar-reports
        curl -s -u admin:admin "http://localhost:9000/api/issues/search?componentKeys=local_project" -o sonar-reports/issues.json
        cat sonar-reports/issues.json | jq > sonar-reports/issues.json

        echo "SonarQube Issues Cmdline Report:"
        jq -r '.issues[] | "File: \(.component), Rule: \(.rule), Message: \(.message)"' sonar-reports/issues.json | sort
        ISSUE_COUNT=$(jq '.issues | length' sonar-reports/issues.json)

        if [ "$ISSUE_COUNT" -gt 0 ]; then
          echo "❌ Build failed: Found $ISSUE_COUNT issues in the codebase."
          exit 1
        else
          echo "✅ No issues found in the codebase."
        fi
    - name: Upload SonarQube Artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: sonar-reports
        path: sonar-reports
